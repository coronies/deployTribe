rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Clubs can be read by anyone, but only created/updated by the owner
    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == clubId;
      allow update: if request.auth != null && 
        (request.auth.uid == clubId || 
         request.auth.uid in resource.data.admins);
    }
    
    // Applications can be created by students and read by club admins
    match /applications/{applicationId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.clubId);
      allow update: if request.auth != null && request.auth.uid == resource.data.clubId;
    }
    
    // Events can be read by anyone, created/updated by club admins
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null;
    }
    
    // Opportunities can be read by anyone, created/updated by authenticated users
    match /opportunities/{opportunityId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null;
    }
    
    // Allow all operations in development/emulator mode
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
} 